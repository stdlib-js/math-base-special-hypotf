// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var t,n;t=this,n=function(){"use strict";var t,n="function"==typeof Math.fround?Math.fround:null,r="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,e=Object.prototype.hasOwnProperty,f="function"==typeof Symbol?Symbol.toStringTag:"";t=r&&"symbol"==typeof Symbol.toStringTag?function(t){var n,r,i,a,u;if(null==t)return o.call(t);r=t[f],u=f,n=null!=(a=t)&&e.call(a,u);try{t[f]=void 0}catch(n){return o.call(t)}return i=o.call(t),n?t[f]=r:delete t[f],i}:function(t){return o.call(t)};var i=t,a="function"==typeof Float32Array,u=Number.POSITIVE_INFINITY,y="function"==typeof Float32Array?Float32Array:null,l="function"==typeof Float32Array?Float32Array:void 0,c=function(){var t,n,r;if("function"!=typeof y)return!1;try{n=new y([1,3.14,-3.14,5e40]),r=n,t=(a&&r instanceof Float32Array||"[object Float32Array]"===i(r))&&1===n[0]&&3.140000104904175===n[1]&&-3.140000104904175===n[2]&&n[3]===u}catch(n){t=!1}return t}()?l:function(){throw new Error("not implemented")},p=new c(1),d="function"==typeof n?n:function(t){return p[0]=t,p[0]};function b(t){return t!=t}var m="function"==typeof Uint32Array,s="function"==typeof Uint32Array?Uint32Array:null,v="function"==typeof Uint32Array?Uint32Array:void 0,A=function(){var t,n,r;if("function"!=typeof s)return!1;try{n=new s(n=[1,3.14,-3.14,4294967296,4294967297]),r=n,t=(m&&r instanceof Uint32Array||"[object Uint32Array]"===i(r))&&1===n[0]&&3===n[1]&&4294967293===n[2]&&0===n[3]&&1===n[4]}catch(n){t=!1}return t}()?v:function(){throw new Error("not implemented")},h=new c(1);new A(h.buffer)[0]=2139095040;var w=h[0],S=new c(1);new A(S.buffer)[0]=4286578688;var F=S[0];function g(t){return t===w||t===F}var U=Math.sqrt;return function(t,n){var r;return b(t)||b(n)?NaN:g(t)||g(n)?w:((t=d(t))<0&&(t=-t),(n=d(n))<0&&(n=-n),t<n&&(r=n,n=t,t=r),0===t?0:(n=d(n/t),d(t*d(U(d(1+d(n*n)))))))}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).hypotf=n();
//# sourceMappingURL=browser.js.map
